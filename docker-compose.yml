version: "3.9"
services:
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=simple_bank
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "su", "-", "postgres", "&&", "pg_isready", "-p", "5432", "-U", $POSTGRES_USER, "-d", $POSTGRES_DB]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - data-volume:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
  api:
    build:
      context: .
      dockerfile: Dockerfile
    pull_policy: build
    ports:
      - "8080:8080"
    environment:
      - DB_SOURCE=postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: [ "/app/main" ]
  crawler:
    build:
      context: crawl/
      dockerfile: Dockerfile
    pull_policy: build
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_SOURCE=postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable
    healthcheck:
      test: ["CMD", "sh", "./wait-for-data.sh"]
      interval: 86400s
      timeout: 30s
      retries: 5
      start_period: 30s
volumes:
  data-volume: